name: Continous Testing by Fachruddin Ghalibi

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    name: Run Static Website Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install HTML Validator (tidy)
        run: sudo apt-get update && sudo apt-get install -y tidy

      - name: Install CSS and JS validation tools
        run: |
          npm install -g csslint
          npm install -g jshint

      - name: Validate HTML files
        run: |
          echo "üîç Validating HTML files..."
          html_files=$(find . -name "*.html" -not -path "./node_modules/*" -not -path "./.git/*")
          if [ -n "$html_files" ]; then
            echo "Found HTML files:"
            echo "$html_files"
            echo "$html_files" | while read -r file; do
              echo "Validating: $file"
              tidy -e -q "$file" || echo "‚ö†Ô∏è Validation completed with warnings for $file"
            done
          else
            echo "‚úÖ No HTML files found to validate"
          fi

      - name: Validate CSS files
        run: |
          echo "üé® Validating CSS files..."
          css_files=$(find . -name "*.css" -not -path "./node_modules/*" -not -path "./.git/*" -not -name "*.min.css")
          if [ -n "$css_files" ]; then
            echo "Found CSS files:"
            echo "$css_files"
            echo "$css_files" | while read -r file; do
              echo "Validating: $file"
              csslint "$file" || echo "‚ö†Ô∏è CSS validation completed with warnings for $file"
            done
          else
            echo "‚úÖ No CSS files found to validate"
          fi

      - name: Validate JavaScript files
        run: |
          echo "‚ö° Validating JavaScript files..."
          js_files=$(find . -name "*.js" -not -path "./node_modules/*" -not -path "./.git/*" -not -name "*.min.js")
          if [ -n "$js_files" ]; then
            echo "Found JavaScript files:"
            echo "$js_files"
            echo "--- Node.js Syntax Check ---"
            echo "$js_files" | while read -r file; do
              echo "Checking syntax: $file"
              node -c "$file"
            done
            echo "--- JSHint Analysis ---"
            echo "$js_files" | while read -r file; do
              echo "Analyzing: $file"
              jshint "$file" || echo "‚ö†Ô∏è JSHint completed with warnings for $file"
            done
          else
            echo "‚úÖ No JavaScript files found to validate"
          fi

      - name: Check file structure
        run: |
          echo "üìÅ Project file structure:"
          find . -type f \( -name "*.html" -o -name "*.css" -o -name "*.js" \) -not -path "./node_modules/*" -not -path "./.git/*" | sort

      - name: Basic accessibility check
        run: |
          echo "‚ôø Basic accessibility check..."
          html_files=$(find . -name "*.html" -not -path "./node_modules/*" -not -path "./.git/*")
          if [ -n "$html_files" ]; then
            echo "$html_files" | while read -r file; do
              echo "Checking accessibility basics in: $file"
              # Check for alt attributes in images
              if grep -q "<img" "$file"; then
                missing_alt=$(grep "<img" "$file" | grep -v "alt=" | wc -l)
                total_img=$(grep "<img" "$file" | wc -l)
                echo "  Images: $total_img total, $missing_alt without alt attribute"
              fi
              # Check for title tag
              if ! grep -q "<title>" "$file"; then
                echo "  ‚ö†Ô∏è Missing <title> tag"
              fi
              # Check for lang attribute
              if ! grep -q "lang=" "$file"; then
                echo "  ‚ö†Ô∏è Missing lang attribute in HTML tag"
              fi
            done
          fi

      - name: Performance check
        run: |
          echo "üöÄ Basic performance check..."
          # Check for large files
          echo "Large files (>100KB):"
          find . -type f \( -name "*.html" -o -name "*.css" -o -name "*.js" -o -name "*.jpg" -o -name "*.png" -o -name "*.gif" \) -not -path "./node_modules/*" -not -path "./.git/*" -size +100k -exec ls -lh {} \; || echo "No large files found"
          
          # Check for minification opportunities
          echo "Unminified files that could be optimized:"
          find . -name "*.css" -not -name "*.min.css" -not -path "./node_modules/*" -not -path "./.git/*" | head -5
          find . -name "*.js" -not -name "*.min.js" -not -path "./node_modules/*" -not -path "./.git/*" | head -5

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=fachryghalibi_tubes-makepal
            -Dsonar.organization=fachryghalibi
            -Dsonar.sources=.
            -Dsonar.inclusions=**/*.html,**/*.css,**/*.js
            -Dsonar.exclusions=**/node_modules/**,**/*.min.js,**/*.min.css,**/.git/**
            -Dsonar.javascript.file.suffixes=.js
            -Dsonar.css.file.suffixes=.css
            -Dsonar.html.file.suffixes=.html,.htm

      - name: Generate test summary
        if: always()
        run: |
          echo "## üìä Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Files Analyzed:" >> $GITHUB_STEP_SUMMARY
          echo "- **HTML Files:** $(find . -name "*.html" -not -path "./node_modules/*" -not -path "./.git/*" | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "- **CSS Files:** $(find . -name "*.css" -not -path "./node_modules/*" -not -path "./.git/*" | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "- **JavaScript Files:** $(find . -name "*.js" -not -path "./node_modules/*" -not -path "./.git/*" | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Validation Status:" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ HTML validation completed" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ CSS validation completed" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ JavaScript validation completed" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ SonarCloud analysis completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check the individual steps above for detailed results." >> $GITHUB_STEP_SUMMARY







          
